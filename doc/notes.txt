TODOs
- Use minAntK/maxAntK options
- Allow intermediate invalid solutions: accept longer inserted tours, then run edge cleanup
- Implement AntNeighorhoods, skip bad solutions
+ ACO: initialize with optional second localSearch, use second local search every n'th iteration
- Initialize half of ants with different neighborhoods
- print out best ants per step with solution values

Evaluation
- Find minimal VND neighborhood set (order of Neighborhoods, configurations,..)

Python script
- Get options for sasptsolver from command-line (?)
- Run sastpsolver for all *.prob files, print result in csv-format (-cp), store csv-files (required for gnuplots!)
- Parse all csv files, collect: best satsisfaction, avg satisfaction, avg runtime, avg runtime until last improvement
- print out latex table code with results for all problems


Other Improvements / Suggestions
- Preprocessing Step: sort methods + spots by ratio
- Preprocessing Step: Eliminate methods that are fully dominated by other methods at same spot
- NodeInserter.addNewNode: avoid crossovers, insert with minimal tour increase
- Statistics about number of improvements per VND neighborhood, runtime of neighborhoods


